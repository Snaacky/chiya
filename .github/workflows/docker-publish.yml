name: Docker

on: [push, pull_request]

env:
  IMAGE_NAME: chiya-bot

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Push image to GitHub Packages and docker hub.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=$(echo ${GITHUB_REPOSITORY} | tr '[A-Z]' '[a-z]')
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          TAG="${DOCKER_IMAGE}:${VERSION}"
          GITHUB_TAG="${DOCKER_IMAGE}/${IMAGE_NAME}:${VERSION}"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tag::${TAG}
          echo ::set-output name=github-tag::${GITHUB_TAG}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Build image for Github
        run: docker build . --file Dockerfile --tag ${{ steps.prep.outputs.tag }}

      - name: Log into Github registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image to Github packages
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ steps.prep.outputs.github-tag }}

          docker image tag ${{ steps.prep.outputs.tag }} $IMAGE_ID
          docker push $IMAGE_ID
